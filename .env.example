# Server Mode Configuration
# サーバーモード設定
# Set to 'true' to enable server mode (Options: true, false)
# サーバーモードを有効にするには 'true' に設定（選択肢：true, false）
NUXT_PUBLIC_SERVER_MODE=false

# AI Provider Configuration (used in server mode)
# AIプロバイダー設定（サーバーモードで使用）
# ---
# Available providers: openai-compatible, siliconflow, 302-ai, infiniai, openrouter, deepseek, ollama
# 利用可能なプロバイダー：openai-compatible, siliconflow, 302-ai, infiniai, openrouter, deepseek, ollama
NUXT_PUBLIC_AI_PROVIDER=openai-compatible
# AI model name (e.g. gpt-4o-mini, deepseek-chat, etc.)
# AIモデル名（例：gpt-4o-mini, deepseek-chat など）
NUXT_PUBLIC_AI_MODEL=gpt-4o-mini
# Maximum context size for the AI model
# AIモデルの最大コンテキストサイズ
NUXT_PUBLIC_AI_CONTEXT_SIZE=128000
# AI provider API key (server-side only, not exposed to frontend)
# AIプロバイダーAPIキー（サーバーサイドのみ、フロントエンドには公開されません）
NUXT_AI_API_KEY=your-api-key-here
# AI provider API base URL (optional, uses provider default if not set)
# AIプロバイダーAPIベースURL（オプション、未設定時はプロバイダーのデフォルト値を使用）
NUXT_AI_API_BASE=https://api.openai.com/v1

# Web Search Provider Configuration (used in server mode)
# Web検索プロバイダー設定（サーバーモードで使用）
# ---
# Available providers: tavily, firecrawl, google-pse
# 利用可能なプロバイダー：tavily, firecrawl, google-pse
NUXT_PUBLIC_WEB_SEARCH_PROVIDER=tavily
# Maximum number of concurrent search requests (1-5 recommended)
# 最大同時検索リクエスト数（推奨：1-5）
NUXT_PUBLIC_WEB_SEARCH_CONCURRENCY_LIMIT=2
# Search language (Options: en, ja, fr)
# 検索言語（オプション：en, ja, fr）
NUXT_PUBLIC_WEB_SEARCH_SEARCH_LANGUAGE=en
# Enable Tavily advanced search (Options: true, false)
# Tavily高度検索を有効化（選択肢：true, false）
NUXT_PUBLIC_TAVILY_ADVANCED_SEARCH=false
# Tavily search topic (Options: general, news, finance)
# Tavily検索トピック（選択肢：general, news, finance）
NUXT_PUBLIC_TAVILY_SEARCH_TOPIC=general
# Google Programmable Search Engine ID (required for google-pse provider)
# Google Programmable Search Engine ID（google-pseプロバイダー使用時必須）
NUXT_PUBLIC_GOOGLE_PSE_ID=your-google-pse-id
# Web search provider API key (server-side only, not exposed to frontend)
# For Tavily and Google PSE, you can provide multiple keys separated by commas for automatic polling.
# Web検索プロバイダーAPIキー（サーバーサイドのみ、フロントエンドには公開されません）
# TavilyとGoogle PSEでは、カンマ区切りで複数のキーを提供して自動ローテーション機能を有効にできます。
NUXT_WEB_SEARCH_API_KEY=your-key-1,your-key-2
# Web search provider API base URL (optional, for firecrawl self-hosted)
# Web検索プロバイダーAPIベースURL（オプション、firecrawlセルフホスト用）
NUXT_WEB_SEARCH_API_BASE=
